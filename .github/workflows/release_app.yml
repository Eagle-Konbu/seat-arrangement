name: Release App

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  solver-test:
    name: Run Solver Tests
    runs-on: ubuntu-latest
    steps:
      - name: Rust setup
        uses: dtolnay/rust-toolchain@nightly

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run tests
        run: cargo test --release --manifest-path solver/Cargo.toml

  pdf-generator-test:
    name: Run PDF Generator Tests
    runs-on: ubuntu-latest
    steps:
      - name: Rust setup
        uses: dtolnay/rust-toolchain@nightly

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run tests
        run: cargo test --release --manifest-path pdf-generator/Cargo.toml

  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    needs: [solver-test, pdf-generator-test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@nightly

      - name: Node setup
        uses: actions/setup-node@v2
        with:
          node-version: 16
      
      - name: Install dependencies
        run: |
          yarn install

      - name: Build(ubuntu, windows)
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'windows-latest'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 'v__VERSION__'
          releaseName: 'Seat Arrangement (仮称) v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false

      - name: Build(macos)
        if: matrix.platform == 'macos-latest'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: '--target universal-apple-darwin'
          tagName: 'v__VERSION__'
          releaseName: 'Seat Arrangement (仮称) v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
